<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>250</x>
      <y>40</y>
      <w>590</w>
      <h>620</h>
    </coordinates>
    <panel_attributes>BinarySearchTree&lt;Type&gt;
-
Structure
+ BinarySearchTree() : Constructor
+ ~BinarySearchTree() : Destructor

Informational Methods
+ getSize() : int
+ getHeight() : int
+ isComplete() : bool
+ isBalanced() : bool

Recursive Information Helpers
# calculateSize(BinaryTreeNode&lt;Type&gt;  * startNode) : int
# calculateHeight(BinaryTreeNode&lt;Type&gt; * startNode) : int
# isBalanced(BinaryTreeNode&lt;Type&gt; * startNode) : bool
# isComplete(BinaryTreeNode&lt;Type&gt; * startNode, int index, int size) : bool

Data Methods
+ insert(Type) : void
+ contains(Type) : bool
+ remove(Type) : void

Recursive Data Helpers
# removeNode(BinaryTreeNode&lt;Type&gt; * removeMe) : void

Traversals
+ inOrderTraversal() : void
+ preOrderTraversal() : void
+ postOrderTraversal() : void

Recursive Traversal Helpers
# inOrderTraversal(BinaryTreeNode&lt;Type&gt; * inStart) : void
# preOrderTraversal(BinaryTreeNode&lt;Type&gt; * preStart) : void
# postOrderTraversal(BinaryTreeNode&lt;Type&gt; * postStart) : void
# getRightMostChild(BinaryTreeNode&lt;Type&gt; * current) : BinaryTreeNode&lt;Type&gt; *
# getLeftMostChild(BinaryTreeNode&lt;Type&gt; * current) : BinaryTreeNode&lt;Type&gt; *

</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
